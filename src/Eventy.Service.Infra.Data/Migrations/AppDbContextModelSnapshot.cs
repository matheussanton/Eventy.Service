// <auto-generated />
using System;
using Eventy.Service.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Eventy.Service.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Eventy.Service.Domain.Entities.EventEntityDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp")
                        .HasColumnName("date");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bool")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_at");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("description");

                    b.Property<string>("GoogleMapsUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("googlemapsurl");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("event");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69414953-6494-481b-98e0-99d02d8cd412"),
                            CreatedAt = new DateTime(2023, 12, 27, 17, 5, 30, 779, DateTimeKind.Utc).AddTicks(6577),
                            CreatedBy = new Guid("e100ec94-d169-41c7-9884-625b11b53e00"),
                            Date = new DateTime(2023, 12, 27, 17, 5, 30, 779, DateTimeKind.Utc).AddTicks(6573),
                            Deleted = false,
                            Description = "Eventy is a event management system",
                            GoogleMapsUrl = "https://g.co/kgs/mxYNbz",
                            Location = "Eventy's office",
                            Name = "Eventy Demo",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("Eventy.Service.Domain.Entities.UserEntityDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bool")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_at");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<short>("Role")
                        .HasColumnType("smallint")
                        .HasColumnName("role");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e100ec94-d169-41c7-9884-625b11b53e00"),
                            CreatedAt = new DateTime(2023, 12, 27, 17, 5, 30, 779, DateTimeKind.Utc).AddTicks(4200),
                            CreatedBy = new Guid("e100ec94-d169-41c7-9884-625b11b53e00"),
                            Deleted = false,
                            Email = "demo@eventy.com",
                            Name = "Demonstration User",
                            Password = "123",
                            Role = (short)1,
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("Eventy.Service.Domain.Entities.UserEventEntityDomain", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "EventId");

                    b.ToTable("user_event");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e100ec94-d169-41c7-9884-625b11b53e00"),
                            EventId = new Guid("69414953-6494-481b-98e0-99d02d8cd412"),
                            Status = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
